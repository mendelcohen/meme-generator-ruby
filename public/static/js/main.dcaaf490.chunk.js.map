{"version":3,"sources":["Header.js","components/Meme.js","MemeGenerator.js","Memes.js","components/Navbar/NavbarElements.js","components/Navbar/index.js","pages/about.js","pages/signup.js","pages/signin.js","App.js","index.js"],"names":["Header","Meme","imgUrl","topText","bottomText","likes","className","src","alt","MemeGenerator","props","useState","setTopText","setBottomText","randomImg","setRandomImg","allMemeImgs","setAllMemeImgs","history","useHistory","handleChange","e","target","name","value","useEffect","fetch","then","response","json","memes","data","onSubmit","preventDefault","randNum","Math","floor","random","length","map","meme","url","id","randMemeImg","type","placeholder","onChange","loggedIn","onClick","params","token","localStorage","getItem","options","method","body","JSON","stringify","headers","PORT","console","log","push","disabled","Memes","allMemes","setAllMemes","img_url","top_text","bottom_text","likedMeme","forEach","Nav","styled","nav","NavLink","Link","NavMenu","FaBars","div","NavBtn","NavBtnLink","Navbar","to","activeStyle","clear","setLoggedIn","About","style","display","justifyContent","alignItems","height","SignUp","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","SignIn","setItem","jwt","isLoggedIn","App","process","Port","path","exact","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dcaaf490.chunk.js","sourcesContent":["function Header() {\n  return (\n      <header>\n          {/* <img \n              src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" \n              alt=\"Problem?\"\n          /> */}\n          <p>Meme Generator</p>\n      </header>\n  )\n}\n\nexport default Header","import React from \"react\"\n\nfunction Meme({imgUrl, topText, bottomText, likes}) {\n\n  return (\n    <div className=\"meme\">\n      <img src={imgUrl} alt=\"\" />\n      <h2 className=\"top\">{topText}</h2>\n      <h2 className=\"bottom\">{bottomText}</h2>\n      <p>{likes}</p>\n    </div>\n  )\n}\n\nexport default Meme","import React, {useState, useEffect} from \"react\"\nimport Meme from \"./components/Meme\"\nimport { useHistory } from 'react-router-dom';\n\nfunction MemeGenerator(props) {\n    const [topText, setTopText] = useState(\"\")\n    const [bottomText, setBottomText] = useState(\"\")\n    const [randomImg, setRandomImg] = useState(\"http://i.imgflip.com/1bij.jpg\")\n    const [allMemeImgs, setAllMemeImgs] = useState([])\n    const history = useHistory()\n\n    useEffect(() => {\n      fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const {memes} = response.data\n                setAllMemeImgs(memes)\n            })\n    }, [])\n\n    function handleChange(e) {\n      const {name, value} = e.target\n      name === \"topText\" ? setTopText(value) : setBottomText(value)\n    }\n  \n    function handleSubmit(e) {\n      e.preventDefault()\n      let randNum = Math.floor(Math.random() * allMemeImgs.length)\n      allMemeImgs.map(meme => {\n        if (meme.url === allMemeImgs[randNum].url && meme.id === \"112126428\" || \n            meme.url === allMemeImgs[randNum].url && meme.id === \"110163934\" ||\n            meme.url === allMemeImgs[randNum].url && meme.id === \"21604248\" || \n            meme.url === allMemeImgs[randNum].url && meme.id === \"71428573\" ||\n            meme.url === allMemeImgs[randNum].url && meme.id === \"17699\"\n           ) {\n          return randNum += 1 \n        }\n      })\n      const randMemeImg = allMemeImgs[randNum].url\n      setRandomImg(randMemeImg)\n    }\n\n    function handleSave(e) {\n      const params = {\n        topText: topText,\n        bottomText: bottomText,\n        imgUrl: randomImg,\n        likes: 0\n      }\n      const token = localStorage.getItem(\"token\")\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify( params ),\n        headers: {\"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${token}`}\n      }\n      fetch(`${props.PORT}/api/memes`, options)\n      // fetch(\"http://localhost:3000/api/memes\", options)\n          .then( response => response.json())\n          .then(response => {\n            console.log(response)\n            history.push('/Memes')\n          })\n    }\n\n    return (\n      <div>\n          <form className=\"meme-form\" onSubmit={handleSubmit}>\n              <input \n                  type=\"text\"\n                  name=\"topText\"\n                  placeholder=\"Top Text\"\n                  value={topText}\n                  onChange={handleChange}\n              /> \n              <input \n                  type=\"text\"\n                  name=\"bottomText\"\n                  placeholder=\"Bottom Text\"\n                  value={bottomText}\n                  onChange={handleChange}\n              /> \n          \n              <button>Gen</button> \n             \n          </form>\n          <Meme \n            imgUrl={randomImg} \n            topText={topText} \n            bottomText={bottomText}\n          />\n    \n          <div>\n            {props.loggedIn ? (\n              <button className=\"meme-save\" onClick={handleSave}>Save</button>\n             ) : (\n              <button className=\"meme-save\" disabled>Sign in to save</button>\n             )\n            } \n          </div>\n          \n          {/* <div className=\"cards\">\n            {\n              allMemeImgs.map(img => (\n                <div className=\"card\">\n                  <h4>{img.id}</h4>\n                  {<img \n              src={img.url} \n              alt=\"Problem?\"\n          />}\n                </div>\n              ))\n            }\n          </div> */}\n\n      </div>\n  )\n}\n\n// class MemeGenerator extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             topText: \"\",\n//             bottomText: \"\",\n//             randomImg: \"http://i.imgflip.com/1bij.jpg\",\n//             allMemeImgs: []\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//     }\n    \n//     componentDidMount() {\n//         fetch(\"https://api.imgflip.com/get_memes\")\n//             .then(response => response.json())\n//             .then(response => {\n//                 const {memes} = response.data\n//                 this.setState({ allMemeImgs: memes })\n//             })\n//     }\n    \n//     handleChange(event) {\n//         const {name, value} = event.target\n//         this.setState({ [name]: value })\n//     }\n    \n//     handleSubmit(event) {\n//         event.preventDefault()\n//         const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n//         const randMemeImg = this.state.allMemeImgs[randNum].url\n//         this.setState({ randomImg: randMemeImg })\n//     }\n    \n//     render() {\n//         return (\n//             <div>\n//                 <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n//                     <input \n//                         type=\"text\"\n//                         name=\"topText\"\n//                         placeholder=\"Top Text\"\n//                         value={this.state.topText}\n//                         onChange={this.handleChange}\n//                     /> \n//                     <input \n//                         type=\"text\"\n//                         name=\"bottomText\"\n//                         placeholder=\"Bottom Text\"\n//                         value={this.state.bottomText}\n//                         onChange={this.handleChange}\n//                     /> \n                \n//                     <button>Gen</button>\n//                 </form>\n//                 <div className=\"meme\">\n//                     <img src={this.state.randomImg} alt=\"\" />\n//                     <h2 className=\"top\">{this.state.topText}</h2>\n//                     <h2 className=\"bottom\">{this.state.bottomText}</h2>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\nexport default MemeGenerator","import React, {useState, useEffect} from \"react\"\nimport Meme from \"./components/Meme\"\nimport { FaThumbsUp } from 'react-icons/fa';\n\n\nfunction Memes(props) {\n    const [ allMemes, setAllMemes ] = useState([])\n    \n    useEffect(() => {\n      const options = {\n        method: \"GET\",\n        headers: {\"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\"}\n      }\n      fetch(`${props.PORT}/api/memes`, options)\n      // fetch(\"http://localhost:3000/api/memes\")\n            .then(response => response.json())\n            .then(response => {\n              console.log(response)\n              setAllMemes(response)\n            })\n    }, [])\n    \n    function increment(likedMeme) {\n      allMemes.forEach(meme => {\n        if (meme.id === likedMeme.id) {\n          meme.likes++;\n          const params = {\n            likes: meme.likes\n          }\n          const token = localStorage.getItem(\"token\")\n          const options = {\n            method: \"PATCH\",\n            body: JSON.stringify( params ),\n            headers: {\"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${token}`}\n          }\n          fetch(`${props.PORT}/api/memes/${meme.id}`, options)\n          // fetch(`http://localhost:3000/api/memes/${meme.id}`, options)\n        }\n      })\n      setAllMemes([...allMemes])\n    }\n    \n    return (\n      <div>\n        <div>\n          <h2 className=\"\">Memes</h2>\n        </div>\n        <div className=\"cards\" >\n          {\n            allMemes.map(meme => (\n              <div className=\"card\" key={meme.id}>\n                <Meme\n                  id={meme.id}\n                  imgUrl={meme.img_url} \n                  topText={meme.top_text} \n                  bottomText={meme.bottom_text}\n                />\n                <p onClick={() => increment(meme)}><FaThumbsUp /><br/>{meme.likes}</p>\n              </div>\n            ))\n          }\n        </div>  \n      </div>\n  )\n}\n\nexport default Memes","import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n  \nexport const Nav = styled.nav`\n  background: #63D471;\n  height: 85px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.2rem calc((100vw - 1000px) / 2);\n  z-index: 12;\n  /* Third Nav */\n  /* justify-content: flex-start; */\n`;\n  \nexport const NavLink = styled(Link)`\n  color: #808080;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n  &.active {\n    color: #000000;\n  }\n`;\n  \nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #808080;\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n  \nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: -24px;\n  /* Second Nav */\n  /* margin-right: 24px; */\n  /* Third Nav */\n  /* width: 100vw;\n  white-space: nowrap; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n  \nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  /* Third Nav */\n  /* justify-content: flex-end;\n  width: 100vw; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n  \nexport const NavBtnLink = styled(Link)`\n  border-radius: 4px;\n  background: #808080;\n  padding: 10px 22px;\n  color: #000000;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  /* Second Nav */\n  margin-left: 24px;\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #808080;\n  }\n`;\n\nexport const Button = styled(Link)`\n  border-radius: 4px;\n  background: #808080;\n  padding: 10px 22px;\n  color: #000000;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  /* Second Nav */\n  margin-left: 24px;\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #808080;\n  }\n`;","import React from 'react';\nimport {\n  Nav,\n  NavLink,\n  NavMenu,\n  NavBtn,\n  NavBtnLink,\n} from './NavbarElements';\n\nconst Navbar = (props) => {\n  \n  function handleLogout() {\n    localStorage.clear();\n    props.setLoggedIn(false) \n  }\n\n  if (props.loggedIn) {\n    return (\n      <>\n        <Nav>\n          <NavMenu>\n            <NavLink to='/MemeGenerator' activeStyle>\n              Meme Generator\n            </NavLink>\n            <NavLink to='/memes' activeStyle>\n              Memes\n            </NavLink>\n          </NavMenu>\n          <NavBtn >\n            <NavBtnLink onClick={handleLogout} to='/sign-in'>Logout</NavBtnLink>\n          </NavBtn>\n        </Nav>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Nav>\n          <NavMenu>\n\n          </NavMenu>\n          <NavBtn >\n            <NavBtnLink to='/sign-in'>Sign In</NavBtnLink>\n            <NavBtnLink to='/sign-up'>Sign Up</NavBtnLink>\n          </NavBtn>\n        </Nav>\n      </>\n    );\n  };\n}\nexport default Navbar;\n","import React from 'react';\n  \nconst About = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'Right',\n        alignItems: 'Right',\n        height: '100vh'\n      }}\n    >\n      <h1>Meme Generator is where you create new and \"surprising\" memes</h1>\n    </div>\n  );\n};\n  \nexport default About;","import React, {useState} from 'react';\nimport { useHistory } from 'react-router-dom';\n  \nfunction SignUp(props) {\n\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [passwordConfirmation, setPasswordConfirmation ] = useState(\"\")\n  const history = useHistory()\n\n  function handleChange(e) {\n    const {name, value} = e.target\n    if (name === \"firstName\") {\n      setFirstName(value)\n     } else if (name === \"lastName\") {\n       setLastName(value)\n     } else if (name === \"email\") {\n      setEmail(value)\n    } else if (name === \"password\") {\n      setPassword(value)\n    } else if (name === \"passwordConfirmation\") {\n      setPasswordConfirmation(value)\n    } \n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    console.log(\"new user\")\n    const params = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify( params ),\n      headers: {\"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\"}\n    }\n    fetch(`${props.PORT}/api/users`, options)\n    // fetch(\"http://localhost:3000/api/users\", options)\n        .then( response => response.json())\n        .then(response => {\n          console.log(response)\n          history.push('/sign-in')\n        })\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'Right',\n        alignItems: 'Right',\n        height: '100vh'\n      }}\n    >\n  \n      <form className=\"signup-form\" onSubmit={handleSubmit}>\n        <h1>Sign Up</h1>\n        <input \n          type=\"text\"\n          name=\"firstName\"\n          placeholder=\"First Name\"\n          value={firstName}\n          onChange={handleChange}\n        /> \n        <br />\n        <input \n          type=\"text\"\n          name=\"lastName\"\n          placeholder=\"Last Name\"\n          value={lastName}\n          onChange={handleChange}\n        /> \n        <br />\n        <input \n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={handleChange}\n        /> \n        <br />\n        <input \n          type=\"text\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={handleChange}\n        /> \n        <br />\n         <input \n          type=\"text\"\n          name=\"passwordConfirmation\"\n          placeholder=\"Password Confirmation\"\n          value={passwordConfirmation}\n          onChange={handleChange}\n        /> \n        <br />\n        <button>Create Account</button>  \n      </form>\n\n    </div>\n  );\n};\n  \nexport default SignUp;","import React, {useState} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction SignIn(props) {\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const history = useHistory()\n  // const PORT = process.env.Port || \"http://localhost:3000\"\n\n  function handleChange(e) {\n    const {name, value} = e.target\n    name === \"email\" ? setEmail(value) : setPassword(value) \n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    const params = {\n      email: email,\n      password: password\n    }\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify( params ),\n      headers: {\"Access-Control-Allow-Origin\": \"localhost:3000\", \"Content-Type\": \"application/json\", \"Accept\": \"application/json\"}\n    }\n    fetch(`${props.PORT}/api/sessions`, options)\n    // fetch(\"http://localhost:3000/api/sessions\", options)\n    .then(response => response.json())\n    .then(data => {\n      console.log(props.PORT);\n      console.log(data)\n      localStorage.setItem(\"token\", data.jwt)\n      props.setLoggedIn(true)\n      history.push('/MemeGenerator')\n    });\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'Right',\n        alignItems: 'Right',\n        height: '100vh'\n      }}\n    >\n      \n      <form className=\"signup-form\" onSubmit={handleSubmit}>\n        <h1>Sign In</h1>\n        <input \n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={handleChange}\n        /> \n        <br />\n        <input \n          type=\"text\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={handleChange}\n        /> \n        <br />\n        <button>Sign In</button>  \n      </form>\n\n    </div>\n  );\n};\n  \nexport default SignIn ;","import React, {useState} from 'react';\nimport Header from \"./Header\"\nimport MemeGenerator from \"./MemeGenerator\"\nimport Memes from \"./Memes\"\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// import Home from './pages';\nimport About from './pages/about';\nimport SignUp from './pages/signup';\nimport SignIn from './pages/signin';\n\nconst isLoggedIn = localStorage.getItem(\"token\")\n\nfunction App() {\n    const [ loggedIn, setLoggedIn ] = useState(isLoggedIn)\n    const PORT = process.env.Port || \"http://localhost:3000\"\n\n    console.log(loggedIn)\n    return (\n        <Router>\n            <Header />\n            <Navbar loggedIn={loggedIn} setLoggedIn={setLoggedIn}/> \n            <Switch>\n              <Route path='/' exact component={MemeGenerator} />\n              <Route path='/about' component={About} />\n              <Route path='/sign-up' render={props => <SignUp {...props} PORT={PORT}/>} />\n              <Route path='/sign-in' render={props => <SignIn {...props} setLoggedIn={setLoggedIn} PORT={PORT}/>} />\n              <Route path='/MemeGenerator' render={props => <MemeGenerator {...props} loggedIn={loggedIn} PORT={PORT}/>}/>\n              <Route path='/Memes' render={props => <Memes {...props} PORT={PORT}/>} />\n            </Switch>\n        </Router>\n        \n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}